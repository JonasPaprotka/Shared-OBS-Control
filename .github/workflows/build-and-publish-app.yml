name: Build and Publish App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate package-lock.json
        run: |
          if [ ! -f package-lock.json ]; then
            echo "package-lock.json not found. Generating it..."
            npm install --package-lock-only
          else
            echo "package-lock.json already exists."
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm install

      - name: Build the App
        run: npm run build

      - name: Package the App
        run: npm run dist

      - name: Extract Version
        id: extract_version
        run: echo "VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: Shared-OBS-Control-${{ env.VERSION }}
          path: dist/

  publish:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate package-lock.json
        run: |
          if [ ! -f package-lock.json ]; then
            echo "package-lock.json not found. Generating it..."
            npm install --package-lock-only
          else
            echo "package-lock.json already exists."
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'

      - name: Install Dependencies
        run: npm install

      - name: Extract Version
        id: extract_version
        run: echo "VERSION=$(node -p \"require('./package.json').version\")" >> $GITHUB_ENV

      - name: Publish Release
        env:
          GH_TOKEN: ${{ secrets.SECRET_TOKEN }}
        run: npm run dist -- --publish=always
